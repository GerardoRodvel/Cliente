{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/websocket.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { WebsocketService } from './services/websocket.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Cliente';\n\n  constructor(public wsService: WebsocketService){\n\n\n  }\n}\n","<footer class=\"p-2 bg-dark text-white text-right\">\n  \n  Server Status:\n  <span *ngIf = \"wsService.socketStatus\" class=\"text-success\">\n    Online\n  </span>\n\n  <span *ngIf = \"!wsService.socketStatus\" class=\"text-danger\">\n      Offline\n    </span>\n\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n//import { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { environment } from 'src/environments/environment';\n\nconst config: SocketIoConfig = {\n  url: environment.wsUrl, options: {}\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    //AppRoutingModule,\n    SocketIoModule.forRoot(config)\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n  public socketStatus = false;\n  constructor(\n    private socket: Socket,\n    ) {\n      this.checkStatus();\n    }\n\n    checkStatus(){\n      this.socket.on('connect', () => {\n        console.log('Conectado al servidor');\n        this.socketStatus = true;\n      });\n\n      this.socket.on('disconnect', () => {\n        console.log('Desconectado del servidor');\n        this.socketStatus = false;\n      });\n    }\n   }\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  wsUrl: 'http://54.175.213.135:3000'\n\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}